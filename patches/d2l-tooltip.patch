diff --git a/tooltip.test.js b/tooltip.test.js
index cd34435..4ac8e54 100644
--- a/tooltip.test.js
+++ b/tooltip.test.js
@@ -49,103 +49,74 @@ var TooltipPage = function(driver) {
 	});
 };

-polymerTests(browsers, function(test, ctx) {
-	var configurations = {
-		mainline: {
-			name: 'mainline',
-			endpoint: 'http://localhost:8081/components/d2l-tooltip/test/acceptance/',
-			shady: 'wc-shadydom',
-			cssShim: 'wc-shimcssproperties'
-		},
-		xVariant: {
-			name: '1.x',
-			endpoint: 'http://localhost:8000/components/d2l-tooltip/test/acceptance/',
-			shadow: 'dom=shadow',
-			cssNative: 'useNativeCSSProperties=true'
-		}
-	};
+polymerTests(browsers, function(test) {
+	var endpoint = 'http://localhost:8080/components/d2l-tooltip/test/acceptance/';

-	// See https://github.com/webcomponents/shadycss/blob/74577b11f20442594cedf4c5a51152dca06eb67c/src/style-settings.js#L29
-	var nativeShadow = ctx.driver.executeScript('return !(window[\'ShadyDOM\'] && window[\'ShadyDOM\'][\'inUse\'])').booleanValue();
-	var hasCss = nativeShadow || ctx.driver.executeScript('return Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) && window.CSS && window.CSS.supports("color", "var(--primary)"))').booleanValue();
+	forAll([['ltr'], ['rtl']], function(dir) {
+		forAll([[true], [false]], function(shady) {
+			forAll([[true, false]], function(shimCss) {

-	forAll(configurations, function(configuration) {
-		forAll([['ltr'], ['rtl']], function(dir) {
-			forAll([[true], [false]], function(shady) {
-				forAll([[true, false]], function(shimCss) {
+				var tags = [
+					shady ? 'shady' : 'shadow',
+					dir
+				];

-					var tags = [
-						configuration.name,
-						shady ? 'shady' : 'shadow',
-						dir
-					];
+				var dom = '';
+				if (shady) {
+					dom = '&wc-shadydom';
+				}

-					var dom;
-					if (shady) {
-						dom = configuration.shady ? '&' + configuration.shady : '';
-					} else {
-						dom = configuration.shadow ? '&' + configuration.shadow : '';
-					}
+				var css = '';
+				if (shimCss && shady) {
+					css = '&wc-shimcssproperties';
+					tags.push('shim-css');
+				}

-					var css = '';
-					if (shimCss) {
-						if (shady && configuration.cssShim) {
-							css = '&' + configuration.cssShim;
-							tags.push('shim-css');
-						}
-					} else {
-						if (hasCss && configuration.cssNative) {
-							css = '&' + configuration.cssNative;
-							tags.push('native-css');
-						}
-					}
-
-					test('d2l-tooltip-notshown', {
-						endpoint: configuration.endpoint + 'bottom.html?dir=' + dir + dom + css,
-						spec: 'test/acceptance/tooltip.gspec',
-						tags: tags.concat(['notshown'])
-					});
-
-					forAll([
-						['bottom'],
-						['top'],
-						['left'],
-						['right'],
-						['mixin']
-					], function(position) {
-						test('d2l-tooltip-' + position, {
-							endpoint: configuration.endpoint + position + '.html?dir=' + dir + dom + css,
-							spec: 'test/acceptance/tooltip.gspec',
-							tags: tags.concat([position])
-						}, function(opts, cb) {
-							var indexPage = new TooltipPage(opts.driver);
-							indexPage.elem.hover();
-							indexPage.elem.waitToBeShown('1s');
-							cb();
-						});
-					});
+				test('d2l-tooltip-notshown', {
+					endpoint: endpoint + 'bottom.html?dir=' + dir + dom + css,
+					spec: 'test/acceptance/tooltip.gspec',
+					tags: tags.concat(['notshown'])
+				});

-					test('d2l-tooltip-no-tap-toggle', {
-						endpoint: configuration.endpoint + 'bottom.html?dir=' + dir + dom + css,
+				forAll([
+					['bottom'],
+					['top'],
+					['left'],
+					['right'],
+					['mixin']
+				], function(position) {
+					test('d2l-tooltip-' + position, {
+						endpoint: endpoint + position + '.html?dir=' + dir + dom + css,
 						spec: 'test/acceptance/tooltip.gspec',
-						tags: tags.concat(['no-tap-toggle'])
+						tags: tags.concat([position])
 					}, function(opts, cb) {
 						var indexPage = new TooltipPage(opts.driver);
-						indexPage.elem.click();
+						indexPage.elem.hover();
 						indexPage.elem.waitToBeShown('1s');
 						cb();
 					});
+				});

-					test('d2l-tooltip-tap-toggle', {
-						endpoint: configuration.endpoint + 'tap-toggle.html?dir=' + dir + dom + css,
-						spec: 'test/acceptance/tooltip.gspec',
-						tags: tags.concat(['tap-toggle'])
-					}, function(opts, cb) {
-						var indexPage = new TooltipPage(opts.driver);
-						indexPage.elem.click();
-						indexPage.elem.waitToBeShown('1s');
-						cb();
-					});
+				test('d2l-tooltip-no-tap-toggle', {
+					endpoint: endpoint + 'bottom.html?dir=' + dir + dom + css,
+					spec: 'test/acceptance/tooltip.gspec',
+					tags: tags.concat(['no-tap-toggle'])
+				}, function(opts, cb) {
+					var indexPage = new TooltipPage(opts.driver);
+					indexPage.elem.click();
+					indexPage.elem.waitToBeShown('1s');
+					cb();
+				});
+
+				test('d2l-tooltip-tap-toggle', {
+					endpoint: endpoint + 'tap-toggle.html?dir=' + dir + dom + css,
+					spec: 'test/acceptance/tooltip.gspec',
+					tags: tags.concat(['tap-toggle'])
+				}, function(opts, cb) {
+					var indexPage = new TooltipPage(opts.driver);
+					indexPage.elem.click();
+					indexPage.elem.waitToBeShown('1s');
+					cb();
 				});
 			});
 		});
